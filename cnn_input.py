import glob
import numpy as np
import os.path as path
from scipy import misc
IMAGE_PATH = './benign_images_cropped/'
file_paths = glob.glob(path.join(IMAGE_PATH, '*.png'))
# print(file_paths)

MAL_IMAGE_PATH = './malware_images_cropped/'
mal_file_paths = glob.glob(path.join(MAL_IMAGE_PATH, '*.png'))
# print(file_paths)

# Load the images
images = [misc.imread(path) for path in file_paths]
images = np.asarray(images)
# print(images)

# Load the malware images
mal_images = [misc.imread(path) for path in mal_file_paths]
mal_images = np.asarray(mal_images)
# print(images)


# Get image size
image_size = np.asarray([images.shape[1], images.shape[2]])
# Get malware image size
mal_image_size = np.asarray([mal_images.shape[1], mal_images.shape[2]])
# print(image_size)

# image pixel - 256
images = images / 255
mal_images = mal_images /255
# print(mal_images.shape)

# Read the labels from the filenames
n_images = images.shape[0]
n_mal_images = mal_images.shape[0]
# print(n_images)
# print(n_mal_images)


total_n_images=n_images+n_mal_images
# print(total_n_images)
# print(images.shape)
# print(mal_images.shape)
# keep all the images  and labels together
images = np.concatenate((images,mal_images))
# images=np.reshape(total_n_images,(256,256,total_n_images))
# images.reshape((256,256,58))
print(images.shape)

labels = np.zeros(n_images)
mal_labels = np.ones(n_mal_images)
labels = np.append(labels,mal_labels)
print(labels.shape)


# Split into test and training sets
TRAIN_TEST_SPLIT = 0.9

# Split at the given index
split_index = int(TRAIN_TEST_SPLIT * total_n_images)
shuffled_indices = np.random.permutation(total_n_images)
train_indices = shuffled_indices[0:split_index]
test_indices = shuffled_indices[split_index:]

# Split the images and the labels
x_train = images[train_indices, :]
y_train = labels[train_indices]
x_test = images[test_indices]
y_test = labels[test_indices]

print(x_test[0].shape)
print(y_train)
